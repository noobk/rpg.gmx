<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>game_obj_system</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9182</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.playerxpos[room] = 450; 
global.playerypos[room] = 450;

//Create objects
//instance_create(x,y,obj_spawner) // Debug  dialog test

//instance_create_limit(x,y,obj_player,1);

instance_create_limit(x,y,obj_inventory,1); // Inventory


//Player States
enum player
{
normal, dialog, inventory
}


// Init player
globalvar playerHP, playerHPmax;
playerHP = 15
playerHPmax = 40
global.state = player.normal
globalvar rfps;
rfps = fps_real
alarm[0] = room_speed/2
globalvar inChest;
inChest = false;
global.battle = false;
global.battleid = 0;
global.playerSpeed = 2;

global.player_bleeding =false;
global.player_overheal =false;
global.player_color = c_white;
global.player_drugged = false;

dialog_init();
global.speaker = 0;
globalvar dialog;
dialog = 0;

healthXoffset = 0
healthYoffset = 0

global.game_speed = 60;
globalvar dti;
dti = delta_init(global.game_speed);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rfps = fps_real;
alarm[0] = room_speed/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera

if instance_exists(obj_player) and !instance_exists(obj_intro_camera)
{

// Player Follow
move_towards_point(mouse_x,mouse_y,0)
xpos = obj_player.x + lengthdir_x(min(0,distance_to_point(mouse_x,mouse_y)),direction)
ypos = obj_player.y + lengthdir_y(min(0,distance_to_point(mouse_x,mouse_y)),direction)

x+=(xpos-x)
y+=(ypos-y)

view_xview[0] = -(view_wview/2)+x
view_yview[0] = -(view_hview/2)+y

view_xview[0] = clamp(view_xview,0,room_width-view_wview)
view_yview[0] = clamp(view_yview,0,room_height-view_hview)

}
/*
view_xview[0] += random_range(-global.cameraShakeForce,global.cameraShakeForce)
view_yview[0] += random_range(-global.cameraShakeForce,global.cameraShakeForce)

global.cameraShakeForce = global.cameraShakeForce*0.9
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// States

if instance_exists(obj_text) { global.state = player.dialog }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Other

// Chest opening
if keyboard_check_pressed(vk_space) and distance_to_object(obj_wooden_chest)&lt;16 and global.inventoryA = false
{
nearestChest = instance_nearest(obj_player.x,obj_player.y,obj_wooden_chest);
global.state = player.inventory;
global.inventoryA = true;
inChest = true ;
}

//Set pos
if playerHP&gt;playerHPmax { playerHP=playerHPmax; }

//Fullscreen toggle
if keyboard_check_pressed(vk_f4) { window_set_fullscreen(!window_get_fullscreen()) }  

if keyboard_check_pressed(ord("P"))
{global.player_bleeding = !global.player_bleeding;}

//DELTA TIME MANAGER
dti = delta_init(global.game_speed);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player Health

if(global.player_drugged)
{
global.player_color = make_color_rgb( choose(0,200,255),choose(0,200,255),choose(0,200,255) );
exit;
}

if(global.player_bleeding)
{
playerHP -= 1/(room_speed*3)
global.player_color = c_red; exit;
}

if(global.player_overheal)
{
global.player_color = c_yellow; exit;
}

global.player_color = c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_font(font_hud_health);
draw_set_halign(fa_right);
draw_set_alpha(1);

draw_set_color(c_black);
draw_text( view_xview[0]+637,view_yview[0]+5,string("HP: ")+string(ceil(playerHP))+string("/")+string(playerHPmax) );

draw_set_color(global.player_color);
draw_text( view_xview[0]+637-1,view_yview[0]+5-1,string("HP: ")+string(ceil(playerHP))+string("/")+string(playerHPmax) );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
