<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9182</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.inventoryA = false;
global.invA = 0;
globalvar inChestS;
inChestS = false;

var i;
for(i=0;i&lt;=20;i++)
{
global.inv[i] = choose(-1,-1,0,1,2)
}

globalvar nearestChest;

global.invLabel = "";
global.invDesc = "";
global.invAction = "";

global.debugInvSelectedItem = global.inv[global.invA];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.player_bleeding=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inventory mechanism

if keyboard_check_pressed(ord("E")) and global.state != player.dialog
{
if global.inventoryA = false { global.inventoryA = true; global.state = player.inventory; }
else
{ global.inventoryA = false; global.state = player.normal; inChest = false; inChestS = false; global.invA = 0; }
}

if inChest = false
{
    if (global.invA &lt; 0) { global.invA+=20; }
    if (global.invA &gt; 19) { global.invA-=20; }
}

if inChest = true
{
    if (global.invA &lt; 0) { inChestS = !inChestS; global.invA+=20; }
    if (global.invA &gt; 19) { inChestS = !inChestS; global.invA-=20; }
}



if keyboard_check_pressed(vk_space) and global.inventoryA = true
{

    if inChest = false
    {
    if global.inv[global.invA] = 0 { playerHP += 15; global.inv[global.invA] = -1; }
    if global.inv[global.invA] = 2 { playerHP -= 10; alarm[0] = 1*60; global.player_bleeding=true; ;global.inv[global.invA] = -1; }
    }
    
    if inChest = true
    {
        if (inChestS)
        {
            if(nearestChest.chestinv[global.invA]) != -1
            {
            scr_additem(nearestChest.chestinv[global.invA]);
            scr_delitem(true,global.invA);
            }
        }
        
        if (!inChestS)
        {
            if(global.inv[global.invA]) != -1
            {
            scr_additem_chest(global.inv[global.invA]);
            scr_delitem(false,global.invA);
            }
        }
    
    }


}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Label and Descriptions

switch(global.inv[global.invA])
{
    default: { scr_inv_label("","",""); break; }
    case 0: { scr_inv_label("Apple","Sweet and Healthy","[SPACE] Eat it"); break; }
    case 1: { scr_inv_label("Gold Coin","Has some value",""); break; }
    case 2: { scr_inv_label("Strange Powder","Wonder what it does...","[SPACE] Try it#[DELETE] Drop it"); break; }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Inventory

if(global.inventoryA)
{

draw_set_alpha(0.55)
draw_set_color(c_black)
draw_rectangle(0,0,room_width,room_height,0)
draw_set_alpha(1)
var k,l,s;
var i = 0;
s = 0;

for(k=1;k&lt;=4;k++)
{
    for(l=1;l&lt;=5;l++)
    {
    draw_sprite(spr_hud_inv_bg,0,view_xview[0]+(l*24)-16,view_yview[0]+32+(k*24))
    if inChestS = false {if i = global.invA { draw_sprite(spr_hud_inv_bg,1,view_xview[0]+(l*24)-16,view_yview[0]+32+(k*24)) }}
    
    if global.inv[i] != -1
        {
        draw_sprite(spr_hud_inv,global.inv[i],view_xview[0]+(l*24)-16,view_yview[0]+32+(k*24))
        }
        
    i+=1;
    }
}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Chest Inventory

if(inChest) and (global.inventoryA)
{

var k,l,s;
var i = 0;
s = 0;

for(k=1;k&lt;=4;k++)
{
    for(l=1;l&lt;=5;l++)
    {
    draw_sprite(spr_hud_inv_bg,0,view_xview[0]+(l*24)+495,view_yview[0]+32+(k*24))
    if inChestS {if i = global.invA { draw_sprite(spr_hud_inv_bg,1,view_xview[0]+(l*24)+495,view_yview[0]+32+(k*24)) }} 
    
    if nearestChest.chestinv[i] != -1
        {
        draw_sprite(spr_hud_inv,nearestChest.chestinv[i],view_xview[0]+(l*24)+495,view_yview[0]+32+(k*24))
        }
        
    i+=1;
    }
}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw labels and description

if(global.inventoryA)
{

draw_set_halign(fa_center);
draw_set_color(c_white);

    if(!inChestS)
    {
draw_set_font(font_inv_label); draw_set_color(c_black);
draw_text(get_view(x)+67,view_yview[0]+155,string_upper(global.invLabel));
draw_set_color(c_white);
draw_text(get_view(x)+66,view_yview[0]+154,string_upper(global.invLabel));
    }
    else
    {
draw_set_font(font_inv_label); draw_set_color(c_black);
draw_text(get_view(x)+573,view_yview[0]+155,string_upper(global.invLabel));
draw_set_color(c_white);
draw_text(get_view(x)+574,view_yview[0]+154,string_upper(global.invLabel));
    }

/*
draw_set_font(font_inv_desc);
draw_text(get_view(x)+240,get_view(y)+80,string(global.invDesc));
*/

    if(!inChest)
    {
draw_set_halign(fa_left);
draw_set_font(font_inv_actions);
draw_text(get_view(x)+2,view_yview[0]+200,string(global.invAction));
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
